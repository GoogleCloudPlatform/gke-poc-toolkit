steps:
- name: 'gcr.io/cloud-builders/gcloud:latest'
  id: create-test-project
  entrypoint: 'bash'
  args:
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    TIMESTAMP=`date "+%m%d%y-%H%M%S"`
    TEST_PROJECT_ID="gpt-$BRANCH_NAME-$$TIMESTAMP"
    echo $$TEST_PROJECT_ID > /workspace/test-project-id.txt
    gcloud projects create $$TEST_PROJECT_ID --folder="$$FOLDER_ID" 
    gcloud projects add-iam-policy-binding $$TEST_PROJECT_ID --member=serviceAccount:152393131587@cloudbuild.gserviceaccount.com --role=roles/owner
    gcloud services enable cloudbilling.googleapis.com --project=$$TEST_PROJECT_ID
    gcloud alpha billing projects link $$TEST_PROJECT_ID --billing-account $$BILLING_ID
  secretEnv: ['FOLDER_ID', 'BILLING_ID']  
- name: 'gcr.io/cloud-builders/gcloud:latest'
  id: setup-gcloud-auth
  entrypoint: 'bash'
  args:
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    SA_NAME="e2e-test"
    KEY_PATH="/workspace/gcloud/e2e-test.json"
    TEST_PROJECT_ID=$(cat "/workspace/test-project-id.txt")
    gcloud config set project $$TEST_PROJECT_ID
    gcloud iam service-accounts create $$SA_NAME --project=$$TEST_PROJECT_ID
    gcloud projects add-iam-policy-binding $$TEST_PROJECT_ID --member="serviceAccount:$$SA_NAME@$$TEST_PROJECT_ID.iam.gserviceaccount.com" --role="roles/owner"
    gcloud iam service-accounts keys create $$KEY_PATH \
    --iam-account=$$SA_NAME@$$TEST_PROJECT_ID.iam.gserviceaccount.com
    gcloud auth activate-service-account $$SA_NAME@$$TEST_PROJECT_ID.iam.gserviceaccount.com --key-file=$$KEY_PATH --project=$$TEST_PROJECT_ID
    gcloud auth list
    gcloud services enable iam.googleapis.com compute.googleapis.com
    gcloud iam service-accounts list
    gcloud compute instances create test --project=$$TEST_PROJECT_ID --zone=us-central1-a --machine-type=e2-medium --network-interface=network-tier=PREMIUM,subnet=default 
# - name: 'gcr.io/gkepoctoolkit/e2etest:latest'
#   id: test-cli-compile
#   entrypoint: 'bash'
#   args:
#   - '-eEuo'
#   - 'pipefail'
#   - '-c'
#   - |-
#     TEST_PROJECT_ID=$(cat "/workspace/test-project-id.txt")
#     pwd 
#     ls
#     cd cli
#     go build
#     mkdir -p /workspace/test 
#     cp ./gkekitctl /workspace/test
#     cd /workspace/test 
#     chmod +x ./gkekitctl
# - name: 'gcr.io/gkepoctoolkit/e2etest:latest'
#   id: test-gkekitctl-init
#   entrypoint: 'bash'
#   args:
#   - '-eEuo'
#   - 'pipefail'
#   - '-c'
#   - |-
#     cd /workspace/test
#     ./gkekitctl init
# - name: 'gcr.io/gkepoctoolkit/e2etest:latest'
#   id: test-gkekitctl-create
#   entrypoint: 'bash'
#   args:
#   - '-eEuo'
#   - 'pipefail'
#   - '-c'
#   - |-
#     cd /workspace/test
#     TEST_PROJECT_ID=$(cat "/workspace/test-project-id.txt")
#     gcloud config set project $$TEST_PROJECT_ID
#     gcloud auth list
#     cat samples/default-config.yaml
#     echo "Replacing tfModuleRepo ($REPO_NAME) and tfModuleBranch ($BRANCH_NAME)..."
#     CONFIG="samples/default-config.yaml"
#     sed "s/tfModuleRepo.*/tfModuleRepo: $REPO_NAME/g" $$CONFIG > $$CONFIG
#     sed "s/tfModuleRepo.*/tfModuleRepo: $BRANCH_NAME/g" $$CONFIG > $$CONFIG
#     echo "Done with sed-- config is now:"
#     cat $$CONFIG
#     ./gkekitctl create --config samples/default-config.yaml
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/folder-id/versions/latest
    env: 'FOLDER_ID'
  - versionName: projects/${PROJECT_ID}/secrets/billing-id/versions/latest
    env: 'BILLING_ID'
