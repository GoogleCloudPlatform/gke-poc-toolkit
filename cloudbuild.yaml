steps:
- name: 'alpine'
  id: 'branch name'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"

- name: 'hashicorp/terraform:0.13.0'
  id: 'tf init'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "terraform/" ]; then
        for dir in terraform/*
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/}
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform init || exit 1
          cd ../../
        done
      fi 

# [START tf-plan]
- name: 'hashicorp/terraform:0.11.14'
  id: 'tf plan'  
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "terraform/" ]; then
        for dir in terraform/*
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/}  
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"

          cat <<EOF > "terraform.tfvars"
          project_id="${PROJECT}"
          governance_project_id="${GOVERNANCE_PROJECT}"
          region="${REGION}"
          private_endpoint="${PRIVATE}"
          cluster_name="verify-endpoint-cluster"
          network_name="verify-cluster-network"
          subnet_name="verify-cluster-subnet"
          node_pool="verify-node-pool"
          zone = "${ZONE}"
          auth_ip = "${AUTH_IP}"
          EOF

          terraform plan || exit 1
          cd ../../
        done
      fi 
  env:
  - 'REGION=northamerica-northeast1'
  - 'ZONE=northamerica-northeast1-a'
  - 'PROJECT=cloud-build-github-trigger'
  - 'GOVERNANCE_PROJECT=cloud-build-github-trigger'
# [END tf-plan]
